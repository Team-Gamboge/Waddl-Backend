# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  add-secret:
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        env:
          DB_CONFIG_FILE: ${{secrets.DB_CONFIG_FILE}}
        run: 'echo "$DB_CONFIG_FILE" > ./src/main/resources/application-prod.properties'

  build:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout source code
#        uses: actions/checkout@v2
#
#      - name: Generate deployment package
#        run: zip -r deploy.zip . -x '*.git*'
#
#      - name: Deploy to EB
#        uses: einaregilsson/beanstalk-deploy@v22
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          application_name: MyApplicationName
#          environment_name: MyApplication-Environment
#          version_label: 12345
#          region: us-west-2
#          deployment_package: deploy.zip
